openapi: 3.0.0
info:
  version: 1.0.0
  title: eCommerce API
  description: This is a simple eCommerce API.
servers:
  - url: 'http://api.example.com/v1'
paths:
  /products:
    get:
      summary: List all products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      servers:
        - url: 'http://api.example.com/v1'
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      servers:
        - url: 'http://api.example.com/v1'
  '/products/{productId}':
    get:
      summary: Get a product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      servers:
        - url: 'http://api.example.com/v1'
  /orders:
    get:
      summary: List all orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
      servers:
        - url: 'http://api.example.com/v1'
    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      servers:
        - url: 'http://api.example.com/v1'
components:
  schemas:
    Product:
      type: object
      title: Product
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        currency:
          type: string
        description:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - id
        - name
        - price
        - currency
    User:
      type: object
      title: User
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        role:
          type: string
      required:
        - name
        - email
        - role
    Address:
      type: object
      title: Address
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          $ref: ./PostalCode.yaml
        country:
          type: string
      required:
        - street
        - city
        - state
        - postalCode
        - country
    Error:
      type: object
      title: Error
      properties:
        code:
          type: integer
        message:
          type: string
        details:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - code
        - message
    Metadata:
      type: object
      title: Metadata
      properties:
        timestamp:
          type: string
          format: date-time
        apiVersion:
          type: string
      required:
        - timestamp
        - apiVersion
    Order:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        productIds:
          type: array
          items:
            type: string
        status:
          enum:
            - placed
            - processed
            - shipped
            - delivered
            - cancelled
        totalPrice:
          type: number
          format: float
